@model E_Commerce_Mezzex.Models.ViewModel.VariationViewModel


@{
    var productId = Model.ProductId;
}

<form id="VariationValueForm" asp-controller="VariationValues" asp-action="Create" method="post">
    @Html.AntiForgeryToken()

    <input type="hidden" name="ProductId" value="@productId" />
    <p>@productId</p>
    <!-- VariationValue form fields -->
    <div class="form-group">
        <label asp-for="VariationValue.VariationTypeId"></label>
        <div class="input-group">
            <select asp-for="VariationValue.VariationTypeId" class="form-control" asp-items="ViewBag.VariationTypes"></select>
            <div class="input-group-append">
                <button type="button" class="btn btn-outline-secondary" data-toggle="modal" data-target="#variationTypeModal">+</button>
            </div>
        </div>
        <span asp-validation-for="VariationValue.VariationTypeId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="VariationValue.Value"></label>
        <input asp-for="VariationValue.Value" class="form-control" />
        <span asp-validation-for="VariationValue.Value" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="VariationValue.PriceAdjustment" class="control-label"></label>
        <div class="input-group">
            <div class="input-group-prepend">
                <span class="input-group-text">$</span>
            </div>
            <input asp-for="VariationValue.PriceAdjustment" class="form-control" type="number" step="0.01" />
        </div>
        <span asp-validation-for="VariationValue.PriceAdjustment" class="text-danger"></span>
    </div>

    <div class="custom-control custom-checkbox mt-2 mb-4">
        <input class="custom-control-input" type="checkbox" id="UsePercentage" asp-for="VariationValue.UsePercentage" />
        <label for="UsePercentage" class="custom-control-label">Price adjustment. Use percentage</label>
        <span asp-validation-for="VariationValue.UsePercentage" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary mb-3 mt-3">Save</button>

    <!-- Image upload section -->
    <div class="form-group mb-3">
        <label for="multipleImageUpload">Upload Images</label>
        <div class="custom-file">
            <input type="file" class="custom-file-input" id="multipleImageUpload" multiple>
            <label class="custom-file-label" for="multipleImageUpload">Choose files</label>
        </div>
    </div>

    <!-- Image Table to Display Uploaded Images -->
    <div class="form-group mb-3">
        <table class="table">
            <!-- Table headers -->
            <thead>
                <tr>
                    <th>Image</th>
                    <th>SEO Filename</th>
                    <th>Alt Attribute</th>
                    <th>Title Attribute</th>
                    <th>URL</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <!-- Table body to append uploaded images -->
            <tbody id="imageTableBody">
                <!-- Images will be appended here -->
            </tbody>
        </table>
        <!-- Button to save uploaded images -->
        <button type="button" id="uploadAllImages" class="btn btn-primary">Save Images</button>
    </div>
</form>

<!-- Modal for creating new VariationType -->
<div class="modal fade" id="variationTypeModal" tabindex="-1" role="dialog" aria-labelledby="variationTypeModalLabel" aria-hidden="true">
    <!-- Modal content -->
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <!-- Modal header -->
            <div class="modal-header">
                <h5 class="modal-title" id="variationTypeModalLabel">Create Variation Type</h5>
                <!-- Close button -->
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <!-- Modal body -->
            <div class="modal-body">
                <!-- VariationType Form inside Modal -->
                <form id="variationTypeForm" asp-controller="VariationTypes" asp-action="Create" method="post">
                    @Html.AntiForgeryToken()

                    <div class="form-group">
                        <label asp-for="VariationType.Name" class="control-label"></label>
                        <input asp-for="VariationType.Name" class="form-control" />
                        <span asp-validation-for="VariationType.Name" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="VariationType.ControlType" class="control-label"></label>
                        <select asp-for="VariationType.ControlType" class="form-control">
                            @foreach (var controlType in Enum.GetValues(typeof(E_Commerce_Mezzex.Models.Domain.ControlType)))
                            {
                                <option value="@((int)controlType)">@controlType</option>
                            }
                        </select>
                        <span asp-validation-for="VariationType.ControlType" class="text-danger"></span>
                    </div>

                    <button type="submit" class="btn btn-primary">Save</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- List to display added variations -->
<ul id="variationList">
    <!-- Existing variations or newly added variations will appear here -->
</ul>


<script>
    $(document).ready(function () {
        var variationValueId = null;

        // Handle form submission for VariationValue
        $("#VariationValueForm").on("submit", function (event) {
            event.preventDefault();
            var formData = new FormData(this);

            $.ajax({
                url: $(this).attr("action"),
                type: $(this).attr("method"),
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    if (response.success) {
                        variationValueId = response.variationValueId;
                        Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: response.message,
                            timer: 2000,
                            showConfirmButton: false
                        }).then(() => {
                            // Reset the form
                            $("#VariationValueForm")[0].reset();

                            // Append new variation to the list
                            $('#variationList').append(`<li>${response.variationValueName} - ${response.variationType}</li>`); // Assuming 'name' is a property of VariationType

                            // Automatically trigger the Save Images button click
                            $("#uploadAllImages").trigger("click");
                            $('#imageTableBody').empty(); // Clear image table
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: response.message
                        });
                    }
                },
                error: function (xhr, status, error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'An error occurred while submitting the form. Please try again.'
                    });
                }
            });
        });

        // Handle image upload
        $(document).on('change', '#multipleImageUpload', function () {
            handleImageUpload(this, $('#imageTableBody'));
        });

        function handleImageUpload(inputElement, imageTableBody) {
            let files = inputElement.files;
            let productId = $('#productId').val();

            for (let i = 0; i < files.length; i++) {
                let data = new FormData();
                data.append('file', files[i]);
                data.append('productId', productId);
                data.append('variationValueId', variationValueId);

                let mediaType = files[i].type.startsWith('image') ? 'Image' : (files[i].type.startsWith('video') ? 'Video' : 'Unknown');

                $.ajax({
                    url: '/api/images',
                    type: 'POST',
                    processData: false,
                    contentType: false,
                    data: data,
                    success: function (result) {
                        let row = `
                            <tr>
                                <td>
                                    ${mediaType === 'Image' ? `<img src="${result.link}" style="width: 100px;" />` : `<video width="100" controls><source src="${result.link}" type="${files[i].type}"></video>`}
                                </td>
                                <td><input type="text" class="form-control seo-filename" /></td>
                                <td><input type="text" class="form-control alt-attribute" /></td>
                                <td><input type="text" class="form-control title-attribute" /></td>
                                <td><input type="text" class="form-control media-type" value="${mediaType}" readonly></td>
                                <td><input type="text" value="${result.link}" class="form-control image-url" readonly /></td>
                                <td>
                                    <button type="button" class="btn btn-danger btn-sm delete-btn">Delete</button>
                                </td>
                            </tr>`;
                        imageTableBody.append(row);
                    },
                    error: function () {
                        Swal.fire('Error', 'Error uploading image.', 'error');
                    }
                });
            }
        }

        // Handle deleting image row
        $(document).on('click', '.delete-btn', function () {
            $(this).closest('tr').remove();
        });

        // Handle saving all images
        $(document).on('click', '#uploadAllImages', function () {
            let imageDetails = [];
            $('#imageTableBody tr').each(function () {
                let seoFilename = $(this).find('.seo-filename').val();
                let altAttribute = $(this).find('.alt-attribute').val();
                let titleAttribute = $(this).find('.title-attribute').val();
                let mediaType = $(this).find('.media-type').val();
                let imageUrl = $(this).find('.image-url').val();

                imageDetails.push({
                    VirtualPath: imageUrl,
                    SeoFilename: seoFilename,
                    AltAttribute: altAttribute,
                    TitleAttribute: titleAttribute,
                    MediaType: mediaType,
                    ProductId: parseInt($('#productId').val()), // Ensure ProductId is an integer
                    VariationValueId: parseInt(variationValueId) // Ensure VariationValueId is an integer
                });
            });

            console.log(imageDetails); // Log the imageDetails for debugging

            $.ajax({
                url: '/api/ImagesDetails',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(imageDetails),
                success: function () {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Images saved successfully.',
                        timer: 2000,
                        showConfirmButton: false
                    }).then(() => {
                        /* window.location.href = '/Products/Index'; // Redirect to product index*/
                    });
                },
                error: function (xhr, status, error) {
                    console.error(xhr.responseText);
                    console.log(imageDetails);// Log the error response for debugging
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Error saving images.'
                    });
                }
            });
        });

    });
</script>